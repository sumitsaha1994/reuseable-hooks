{"version":3,"sources":["useFetchTasks.js","App.js","index.js"],"names":["useFetchTasks","url","congif","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","tasks","setTasks","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetch","then","response","json","catch","err","console","finally","App","_useFetchTasks","react_default","a","createElement","className","map","task","key","id","title","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"kJAqBeA,EAnBO,SAACC,GAAqB,IAAhBC,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAAOG,EAChBC,mBAAS,IADOC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnCK,EADmCH,EAAA,GAC5BI,EAD4BJ,EAAA,GAAAK,EAERN,oBAAS,GAFDO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEnCE,EAFmCD,EAAA,GAExBE,EAFwBF,EAAA,GAAAG,EAGhBV,mBAAS,MAHOW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGnCE,EAHmCD,EAAA,GAG5BE,EAH4BF,EAAA,GAgB1C,OAXAG,oBAAU,WACRL,GAAa,GACbM,MAAMrB,EAAKC,GACRqB,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACE,GAAD,OAAUb,EAASa,KACxBC,MAAM,SAACC,GACNP,EAASO,GACTC,QAAQT,MAAMQ,KAEfE,QAAQ,kBAAMb,GAAa,MAC7B,IACI,CAAEL,QAAOI,YAAWI,UCdd,SAASW,IAAM,IAAAC,EACQ/B,EAClC,8CADMW,EADoBoB,EACpBpB,MAAOI,EADagB,EACbhB,UAAWI,EADEY,EACFZ,MAI1B,OACEa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZpB,EACCiB,EAAAC,EAAAC,cAAA,uBAEAvB,EAAMyB,IAAI,SAACC,GAAD,OAAUL,EAAAC,EAAAC,cAAA,MAAII,IAAKD,EAAKE,IAAKF,EAAKG,SAE7CrB,EAAQa,EAAAC,EAAAC,cAAA,YAAc,MCX7B,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPb,EAAAC,EAAAC,cAACF,EAAAC,EAAMa,WAAP,KACEd,EAAAC,EAAAC,cAACJ,EAAD,OAEFW","file":"static/js/main.677ad329.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetchTasks = (url, congif = {}) => {\n  const [tasks, setTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(url, congif)\n      .then((response) => response.json())\n      .then((json) => setTasks(json))\n      .catch((err) => {\n        setError(err);\n        console.error(err);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n  return { tasks, isLoading, error };\n};\n\nexport default useFetchTasks;\n","import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport useFetchTasks from \"./useFetchTasks\";\n\nexport default function App() {\n  const { tasks, isLoading, error } = useFetchTasks(\n    \"https://jsonplaceholder.typicode.com/todos\"\n  );\n\n  return (\n    <div className=\"App\">\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        tasks.map((task) => <h4 key={task.id}>{task.title}</h4>)\n      )}\n      {error ? <pre></pre> : null}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}